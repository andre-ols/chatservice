// Code generated by mockery v2.23.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// TokenCounter is an autogenerated mock type for the TokenCounter type
type TokenCounter struct {
	mock.Mock
}

// CountTokens provides a mock function with given fields: model, text
func (_m *TokenCounter) CountTokens(model string, text string) (int, error) {
	ret := _m.Called(model, text)

	var r0 int
	var r1 error
	if rf, ok := ret.Get(0).(func(string, string) (int, error)); ok {
		return rf(model, text)
	}
	if rf, ok := ret.Get(0).(func(string, string) int); ok {
		r0 = rf(model, text)
	} else {
		r0 = ret.Get(0).(int)
	}

	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(model, text)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewTokenCounter interface {
	mock.TestingT
	Cleanup(func())
}

// NewTokenCounter creates a new instance of TokenCounter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTokenCounter(t mockConstructorTestingTNewTokenCounter) *TokenCounter {
	mock := &TokenCounter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
